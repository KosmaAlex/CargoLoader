// <auto-generated />
using System;
using CargoLoader.EntityFraemwork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CargoLoader.EntityFraemwork.Migrations
{
    [DbContext(typeof(CargoLoaderDbContext))]
    [Migration("20220705131119_dimensions_to_decimal")]
    partial class dimensions_to_decimal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CargoLoader.Domain.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("Capacity")
                        .HasColumnType("float");

                    b.Property<int?>("ContainerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsContainer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFragile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRotatable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Marking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContainerId");

                    b.HasIndex("OrderId");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("CargoLoader.Domain.Models.Container", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double?>("Capacity")
                        .HasColumnType("float");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsContainer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFragile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRotatable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Marking")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Marking")
                        .IsUnique();

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("CargoLoader.Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CargoLoader.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsContainer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFragile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRotatable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Marking")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Marking")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CargoLoader.Domain.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VolumeCapacity")
                        .HasColumnType("float");

                    b.Property<double>("WeightCapacity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("CargoLoader.Domain.Models.Cargo", b =>
                {
                    b.HasOne("CargoLoader.Domain.Models.Cargo", "Container")
                        .WithMany("ContainedCargo")
                        .HasForeignKey("ContainerId");

                    b.HasOne("CargoLoader.Domain.Models.Order", "Order")
                        .WithMany("Cargo")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Container");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CargoLoader.Domain.Models.Cargo", b =>
                {
                    b.Navigation("ContainedCargo");
                });

            modelBuilder.Entity("CargoLoader.Domain.Models.Order", b =>
                {
                    b.Navigation("Cargo");
                });
#pragma warning restore 612, 618
        }
    }
}
